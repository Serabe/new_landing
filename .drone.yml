workspace:
  base: /go
  path: src/github.com/src-d/landing

branches: master

pipeline:

  build:
    image: golang:1.8
    commands:
      - apt-get update
      - apt-get install -y make bash curl git
      - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash
      - . ~/.nvm/nvm.sh
      - nvm install 8
      - nvm use 8
      - npm install -g yarn
      - npm rebuild node-sass
      - go get -v -t ./...
      - make build
      - make packages
    debug: true
    when:
      event: [push, pull_request]

  docker_landing:
    image: plugins/docker
    registry: quay.io
    repo: quay.io/srcd/landing
    secrets: [ docker_username, docker_password ]
    tag: ${DRONE_COMMIT_SHA:0:7}
    dockerfile: Dockerfile
    debug: true
    when:
      event: [push]

  docker_api:
    image: plugins/docker
    registry: quay.io
    repo: quay.io/srcd/landing-api
    secrets: [ docker_username, docker_password ]
    tag: ${DRONE_COMMIT_SHA:0:7}
    dockerfile: Dockerfile.api
    debug: true
    when:
      event: [push]

  docker_slackin:
    image: plugins/docker
    registry: quay.io
    repo: quay.io/srcd/landing-slackin
    secrets: [ docker_username, docker_password ]
    tag: ${DRONE_COMMIT_SHA:0:7}
    dockerfile: Dockerfile.slackin
    debug: true
    when:
      event: [push]

  helm_deploy_stg:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm-charts/landing
    release: landing
    prefix: STG
    secrets: [ STG_API_SERVER, STG_KUBERNETES_TOKEN, SLACK_API_TOKEN ]
    values: ingress.globalStaticIpName=landing-staging,image.landingSlackin.slackApiToken=$$SLACK_API_TOKEN,ingress.hosts={srcd.run,www.srcd.run},image.registry=quay.io/srcd,image.tag=${DRONE_COMMIT_SHA:0:7}
    tiller_ns: kube-system
    debug: true
    wait: true
    when:
      event: [push]

  helm_deploy_prod:
    image: quay.io/ipedrazas/drone-helm
    skip_tls_verify: true
    chart: ./helm-charts/landing
    release: landing
    prefix: PROD
    secrets: [ PROD_API_SERVER, PROD_KUBERNETES_TOKEN, SLACK_API_TOKEN ]
    values: ingress.globalStaticIpName=landing-sourced-tech,image.landingSlackin.slackApiToken=$$SLACK_API_TOKEN,ingress.hosts={landingprod.sourced.tech,www.landingprod.sourced.tech},image.registry=quay.io/srcd,image.tag=${DRONE_COMMIT_SHA:0:7}
    tiller_ns: kube-system
    debug: true
    wait: true
    when:
      event: tag
